import * as React from "react"
import { useState } from "react"
import { addPropertyControls, ControlType } from "framer"

PopupMenuRow.defaultProps = {
    width: 200,
    height: 19,
    text: "New",
    active: false,
    type: "Normal",
    shortcut: "",
    checked: false,
}

export function PopupMenuRow(props) {
    const { width, height, text, active, type, shortcut, checked } = props

    return (
        <div style={rowStyle(active)}>
            {text}
            <div style={leftStyle(active, type, checked)}>✓</div>
            <div style={rightStyle(active, type)}>
                {type === "-" ? shortcut : ""}
                {type === "▶︎" ? "▶︎" : ""}
            </div>
        </div>
    )
}

addPropertyControls(PopupMenuRow, {
    text: {
        type: ControlType.String,
        title: "Label",
        placeholder: "Open With...",
    },
    active: {
        type: ControlType.Boolean,
        title: "Active",
        enabledTitle: "Yes",
        disabledTitle: "No",
    },
    type: {
        type: ControlType.SegmentedEnum,
        title: "Row type",
        options: ["-", "▶︎", "✓"],
    },
    shortcut: {
        type: ControlType.String,
        title: "Shortcut",
        placeholder: "⌘N",
        hidden(props) {
            return props.type !== "-"
        },
    },
    checked: {
        type: ControlType.Boolean,
        title: "Checked",
        enabledTitle: "Yes",
        disabledTitle: "No",
        hidden(props) {
            return props.type !== "✓"
        },
    },
})

function rowStyle(active): React.CSSProperties {
    const BG_COLOR = active ? "#3F95FD" : "transparent"
    const TEXT_COLOR = active ? "white" : "#4C4C4C"

    return {
        height: "100%",
        width: "100%",
        paddingLeft: 21,
        paddingRight: 40,
        background: BG_COLOR,
        color: TEXT_COLOR,
        fontSize: 14,
        fontFamily: "-apple-system, system-ui, BlinkMacSystemFont, Segoe UI",
    }
}

function leftStyle(active, type, checked): React.CSSProperties {
    const VISIBLE = type === "✓" && checked ? "block" : "none"

    return {
        display: VISIBLE,
        height: "100%",
        position: "absolute",
        left: 6,
        top: 0,
    }
}

function rightStyle(active, type): React.CSSProperties {
    const RIGHT = type === "▶︎" ? 12 : 8

    return {
        height: "100%",
        position: "absolute",
        right: RIGHT,
        top: 0,
    }
}
