import * as React from "react"
import { Frame } from "framer"
import { urlWithoutDomain } from "../Utils/imageWorkAround"

/* -------------------------------------------------------------------------- */
/*                                    Icon                                    */
/* -------------------------------------------------------------------------- */

const iconFilePath = "./images/Icons/"

Icon.defaultProps = {
    width: 64,
    height: 64,
    size: 64,
    imagePath: `${iconFilePath}File Blank.png`,
}

export function Icon({ imageFileName, ...rest }) {
    const myImage = urlWithoutDomain({
        filename: imageFileName,
        filepath: iconFilePath,
    })

    return (
        <Frame
            {...rest}
            style={{
                backgroundSize: "contain",
                backgroundPosition: "center",
                backgroundRepeat: "no-repeat",
                backgroundColor: "transparent",
                backgroundImage: `url(${myImage})`,
            }}
        />
    )
}

/* -------------------------------------------------------------------------- */
/*                                IconThumbnail                               */
/* -------------------------------------------------------------------------- */

//FIXME: Styling of the thumbnail is janky for all other file types
export function IconThumbnail({ thumbnail, width, thumbStyle = "basic" }) {
    const basicStyle: React.CSSProperties = {
        border: "2px solid white",
        boxShadow: "0px 2px 4px rgba(0,0,0,.33)",
        maxHeight: "54px",
        width: "auto",
        maxWidth: "65%",
        position: "absolute",
        top: "calc(50% - 32px)",
        left: width / 16 + 2,
    }
    const letterBoxStyle: React.CSSProperties = {
        boxShadow: "0px 2px 4px rgba(0,0,0,.33)",
        objectFit: "contain",
        objectPosition: "50% 50%",
        backgroundColor: "black",
        position: "absolute",
        maxHeight: "54px",
        maxWidth: "65%",
        height: "40px",
        top: "calc(50% - 20px)",
        left: width / 16,
    }
    return (
        <img
            style={thumbStyle === "letterbox" ? letterBoxStyle : basicStyle}
            src={thumbnail ? `data:image/jpeg;base64, ${thumbnail}` : null}
        />
    )
}
