import * as React from "react"
import { ControlType, addPropertyControls, Frame, Scroll } from "framer"
import {
    Browsers_Safari,
    Browsers_Chrome,
    Browsers_Chrome_Old,
    Helpers_DefaultInstructions as DefaultInstructions,
} from "./canvas"
import { WebView } from "./Subcomponents/WebView"

/* -------------------------------------------------------------------------- */
/*                                   Globals                                  */
/* -------------------------------------------------------------------------- */

const SAFARI_HEADER_HEIGHT = 38
const CHROME_HEADER_HEIGHT = 79

const MemoizedWebView = React.memo(WebView)

/* -------------------------------------------------------------------------- */
/*                                   Browser                                  */
/* -------------------------------------------------------------------------- */

export function Browser(props) {
    const {
        width,
        height,
        browser,
        url,
        live,
        browserHeight,
        children,
        onMouseDown,
        ...rest // Reference:  https://spectrum.chat/framer/learn/can-i-apply-a-code-override-to-a-code-component~431559b7-1598-4f4b-b94f-238a95df8299
    } = props

    const PAGE_TITLE = url
        .substring(0, url.lastIndexOf("."))
        .replace("https://", "")
        .replace("http://", "")
        .replace("www.", "")
        .replace(/^\w/, c => c.toUpperCase())
    const HEADER_HEIGHT =
        browser === "Safari" ? SAFARI_HEADER_HEIGHT : CHROME_HEADER_HEIGHT

    // Static Frame used as content
    const ACTUAL_CHILD = children[0]

    const viewPortProps = {
        width: "100%",
        height: "100%",
    }

    const browserProps = {
        ...viewPortProps,
        URL: url.replace("https://", "").replace("http://", ""),
    }

    const chromeProps = {
        pageTitle: PAGE_TITLE,
        favicon: `https://www.google.com/s2/favicons?domain_url=${url}`,
    }

    return (
        <Frame {...rest} style={browserStyle}>
            {browser === "Safari" ? <Browsers_Safari {...browserProps} /> : ""}
            {browser === "Chrome" ? (
                <Browsers_Chrome {...browserProps} {...chromeProps} />
            ) : (
                ""
            )}
            {browser === "Old" ? (
                <Browsers_Chrome_Old {...browserProps} {...chromeProps} />
            ) : (
                ""
            )}

            <Frame //Content Wrapper
                style={contentStyle(HEADER_HEIGHT)}
            >
                {live ? (
                    <MemoizedWebView {...viewPortProps} url={url} />
                ) : ACTUAL_CHILD ? (
                    <Scroll {...viewPortProps}>
                        {React.cloneElement(ACTUAL_CHILD, { height: "100%" })}
                    </Scroll>
                ) : (
                    <DefaultInstructions
                        Message="Connect to content"
                        width="100%"
                        height="100%"
                    />
                )}
            </Frame>
        </Frame>
    )
}

const browserStyle = {
    height: "100%",
    width: "100%",
    display: "flex",
    overflow: "hidden",
    justifyContent: "center",
    alignItems: "center",
    background: "transparent",
    borderRadius: 4,
    boxShadow:
        "0px 0px 20px 0px rgba(0, 0, 0, 0.15), 0px 25px 30px 0px hsla(0, 0%, 0%, 0.35)",
}

const contentStyle = headerHeight => {
    return {
        width: "100%",
        height: `calc(100%-${headerHeight}`,
        top: headerHeight,
        bottom: 0,
        overflow: "hidden",
        background: "transparent",
    }
}

addPropertyControls(Browser, {
    browser: {
        type: ControlType.Enum,
        title: "Browser",
        options: ["Safari", "Chrome", "Old"],
        optionTitles: ["Safari", "Chrome", "Chrome (Old)"],
    },
    url: {
        type: ControlType.String,
        placeholder: "www.example.org",
        title: "URL",
    },
    live: {
        type: ControlType.Boolean,
        title: "Live Site",
        enabledTitle: "On",
        disabledTitle: "Off",
    },
})

Browser.defaultProps = {
    //@ts-ignore
    name: Browser.propertyControls.browser.optionTitles[0],
    width: 1200,
    height: 720,
    //@ts-ignore
    browser: Browser.propertyControls.browser.options[0],
    url: "https://www.dropbox.design/resource/framer-desktop-kit",
    live: false,
    fitContainer: true,
}
